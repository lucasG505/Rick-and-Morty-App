{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Desktop/Henry/Carrera/M2/FirstProyect/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { About } from './components/About/About';\nimport { Detail } from './components/Detail/Detail';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport { Form } from './components/Form/Form';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DivApp = styled.div`\n  text-align: center;\n`;\n_c = DivApp;\nconst styledNav = styled(Nav)`\n  background-color: #333; // color de fondo /\n  color: #fff; // color de texto /\n  display: flex; // hace que los elementos del nav se alineen horizontalmente /\n  justify-content: space-between; // hace que los elementos del nav tengan espacio entre sí /\n  padding: 10px; // espacio alrededor del nav /\n  &:a{\n      color: #fff; // color de texto de los enlaces /\n      text-decoration: none; // quita la línea debajo de los enlaces /\n      padding: 10px; // espacio alrededor de los enlaces /\n  }\n  &:a:hover{\n      background-color: #555; // color de fondo al pasar el cursor sobre los enlaces */\n\n  }\n `;\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [acces, setAcces] = useState(false);\n  let username = \"lucas.mariano.g@gmail.com\";\n  let password = \"123456\";\n  const onSearch = character => {\n    fetch(`https://rickandmortyapi.com/api/character/${character}`).then(res => res.json()).then(data => {\n      if (data.name) {\n        let repe = false;\n        characters.forEach(char => {\n          if (char.id == character) {\n            repe = true;\n          }\n        });\n        if (!repe) {\n          setCharacters([...characters, data]);\n        } else {\n          alert(\"Ya ingreso este personaje\");\n        }\n      } else {\n        alert(\"No existe personaje con ese ID\");\n      }\n    }).catch(err => console.log(err));\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== id));\n  };\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(DivApp, {\n    children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:detailId\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dKeewddFWdfYYz5uE7oyRmdMJcM=\", false, function () {\n  return [useLocation];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"DivApp\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["About","Detail","Cards","Nav","Form","useState","styled","Route","Routes","useLocation","DivApp","div","styledNav","App","characters","setCharacters","acces","setAcces","username","password","onSearch","character","fetch","then","res","json","data","name","repe","forEach","char","id","alert","catch","err","console","log","onClose","filter","location","pathname"],"sources":["/home/usuario/Desktop/Henry/Carrera/M2/FirstProyect/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { About } from './components/About/About';\r\nimport { Detail } from './components/Detail/Detail';\r\nimport Cards from './components/Cards/Cards.jsx';\r\nimport Nav from './components/Nav/Nav.jsx';\r\nimport { Form } from './components/Form/Form';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route,Routes,useLocation} from 'react-router-dom';\r\n\r\nconst DivApp = styled.div`\r\n  text-align: center;\r\n`\r\nconst styledNav = styled(Nav)`\r\n  background-color: #333; // color de fondo /\r\n  color: #fff; // color de texto /\r\n  display: flex; // hace que los elementos del nav se alineen horizontalmente /\r\n  justify-content: space-between; // hace que los elementos del nav tengan espacio entre sí /\r\n  padding: 10px; // espacio alrededor del nav /\r\n  &:a{\r\n      color: #fff; // color de texto de los enlaces /\r\n      text-decoration: none; // quita la línea debajo de los enlaces /\r\n      padding: 10px; // espacio alrededor de los enlaces /\r\n  }\r\n  &:a:hover{\r\n      background-color: #555; // color de fondo al pasar el cursor sobre los enlaces */\r\n\r\n  }\r\n `\r\n\r\nfunction App() {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [acces,setAcces] =useState(false);\r\n  let username=\"lucas.mariano.g@gmail.com\";\r\n  let password=\"123456\";\r\n  const onSearch = (character) => {\r\n    fetch(`https://rickandmortyapi.com/api/character/${character}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.name) {\r\n          let repe=false;\r\n          characters.forEach(char => {\r\n            if (char.id == character) {\r\n              repe=true;\r\n            }\r\n\r\n          });\r\n          if(!repe){\r\n            setCharacters([...characters, data]);\r\n          }else{\r\n            alert(\"Ya ingreso este personaje\");\r\n          }\r\n        } else {\r\n          alert(\"No existe personaje con ese ID\");\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  const onClose = (id) => {\r\n    setCharacters(characters.filter(char => char.id !== id));\r\n  }\r\n  const location=useLocation();\r\n  return (\r\n    <DivApp>\r\n      {location.pathname!==\"/\" && <Nav onSearch={onSearch} />}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Form></Form>} ></Route>\r\n        <Route path=\"/home\" element={<Cards characters={characters}\r\n          onClose={onClose}/>} />\r\n        <Route path=\"/about\" element={<About/>} />\r\n        <Route path=\"/detail/:detailId\" element={<Detail/>} />  \r\n      </Routes>\r\n    </DivApp>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}